[{"C:\\Users\\sinmo\\Homework_Assignments\\08_Portfolio\\tsinmoua.github.io\\src\\index.js":"1","C:\\Users\\sinmo\\Homework_Assignments\\08_Portfolio\\tsinmoua.github.io\\src\\App.js":"2","C:\\Users\\sinmo\\Homework_Assignments\\08_Portfolio\\tsinmoua.github.io\\src\\serviceWorkerRegistration.js":"3","C:\\Users\\sinmo\\Homework_Assignments\\08_Portfolio\\tsinmoua.github.io\\src\\components\\Theme.js":"4","C:\\Users\\sinmo\\Homework_Assignments\\08_Portfolio\\tsinmoua.github.io\\src\\components\\Navbar.js":"5","C:\\Users\\sinmo\\Homework_Assignments\\08_Portfolio\\tsinmoua.github.io\\src\\components\\Footer.js":"6","C:\\Users\\sinmo\\Homework_Assignments\\08_Portfolio\\tsinmoua.github.io\\src\\components\\ScrollToTop.js":"7","C:\\Users\\sinmo\\Homework_Assignments\\08_Portfolio\\tsinmoua.github.io\\src\\pages\\Home.js":"8","C:\\Users\\sinmo\\Homework_Assignments\\08_Portfolio\\tsinmoua.github.io\\src\\pages\\About.js":"9","C:\\Users\\sinmo\\Homework_Assignments\\08_Portfolio\\tsinmoua.github.io\\src\\pages\\Skills.js":"10","C:\\Users\\sinmo\\Homework_Assignments\\08_Portfolio\\tsinmoua.github.io\\src\\pages\\Projects.js":"11","C:\\Users\\sinmo\\Homework_Assignments\\08_Portfolio\\tsinmoua.github.io\\src\\pages\\Contact.js":"12"},{"size":511,"mtime":1609197802238,"results":"13","hashOfConfig":"14"},{"size":1162,"mtime":1609605452692,"results":"15","hashOfConfig":"14"},{"size":5064,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":384,"mtime":1608753260596,"results":"17","hashOfConfig":"14"},{"size":5740,"mtime":1609868037449,"results":"18","hashOfConfig":"14"},{"size":1916,"mtime":1610469965026,"results":"19","hashOfConfig":"14"},{"size":268,"mtime":1609386592781,"results":"20","hashOfConfig":"14"},{"size":6094,"mtime":1609799161795,"results":"21","hashOfConfig":"14"},{"size":3499,"mtime":1609386092550,"results":"22","hashOfConfig":"14"},{"size":4669,"mtime":1609386812848,"results":"23","hashOfConfig":"14"},{"size":13525,"mtime":1609650879762,"results":"24","hashOfConfig":"14"},{"size":5229,"mtime":1610811998788,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1xr31fy",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"C:\\Users\\sinmo\\Homework_Assignments\\08_Portfolio\\tsinmoua.github.io\\src\\index.js",[],["54","55"],"C:\\Users\\sinmo\\Homework_Assignments\\08_Portfolio\\tsinmoua.github.io\\src\\App.js",[],"C:\\Users\\sinmo\\Homework_Assignments\\08_Portfolio\\tsinmoua.github.io\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\sinmo\\Homework_Assignments\\08_Portfolio\\tsinmoua.github.io\\src\\components\\Theme.js",[],"C:\\Users\\sinmo\\Homework_Assignments\\08_Portfolio\\tsinmoua.github.io\\src\\components\\Navbar.js",["56"],"import React, { useEffect, useState } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  useScrollTrigger,\n  Button,\n  Tab,\n  Tabs,\n  useMediaQuery,\n  SwipeableDrawer,\n  List,\n  ListItem,\n  ListItemText,\n  Typography\n} from \"@material-ui/core\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Link } from 'react-router-dom'\n\nimport Logo from '../assets/TsinMoua.png'\n\nfunction ElevationScroll(props) {\n  const { children, window } = props;\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n    target: window ? window() : undefined,\n  });\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  });\n}\n\nconst useStyles = makeStyles((theme) => ({\n  toolbarMargin: {\n    ...theme.mixins.toolbar,\n    marginBottom: \"2rem\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginBottom: \"2.5rem\"\n    }\n  },\n  logoContainer: {\n    padding: 0,\n    \"&:hover\": {\n      backgroundColor: 'transparent'\n    },\n    height: '6rem'\n  },\n  drawerIconContainer: {\n    marginLeft: 'auto',\n    height: '2rem',\n    \"&:hover\": {\n      backgroundColor: \"transparent\"\n    }\n  },\n  tabContainer: {\n    marginLeft: 'auto',\n  },\n  drawer: {\n    backgroundColor: theme.palette.common.navy,\n    width: '25%',\n    [theme.breakpoints.down(\"xs\")]: {\n      width: '50%',\n    }\n  },\n  drawerItemSelected: {\n    \"& .MuiListItemText-root\": {\n      opacity: 1\n    },\n    color: theme.palette.common.orange,\n  },\n  tab: {\n    minWidth: '8rem'\n  },\n\n}));\n\n\nfunction Navbar(props) {\n  const classes = useStyles();\n  const [value, setValue] = useState('1');\n  const [openDrawer, setOpenDrawer] = useState(false);\n\n  const theme = useTheme();\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  useEffect(() => {\n    if (window.location.pathname === '/' && value !== '1') {\n      setValue('1')\n    } else if (window.location.pathname === '/about' && value !== '2') {\n      setValue('2')\n    } else if (window.location.pathname === '/skills' && value !== '3') {\n      setValue('3')\n    } else if (window.location.pathname === '/projects' && value !== '4') {\n      setValue('4')\n    } else if (window.location.pathname === '/contact' && value !== '5') {\n      setValue('5')\n    }\n  }, [value, window.location.pathname] )\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const routes = [\n    { name: \"HOME\", link: \"/\", activeIndex: '1' },\n    { name: \"ABOUT\", link: \"/about\", activeIndex: '2' },\n    { name: \"SKILLS\", link: \"/skills\", activeIndex: '3' },\n    { name: \"PROJECTS\", link: \"/projects\", activeIndex: '4' },\n    { name: \"CONTACT\", link: \"/contact\", activeIndex: '5' },\n  ]\n\n  const drawer = (\n    <React.Fragment>\n      <SwipeableDrawer\n        className={classes.swipe}\n        disableBackdropTransition={!iOS}\n        disableDiscovery={iOS}\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n        onOpen={() => setOpenDrawer(true)}\n        classes={{ paper: classes.drawer }}\n        anchor=\"right\"\n      >\n        <div className={classes.toolbarMargin} />\n        <List disablePadding>\n          {routes.map(route => (\n            <ListItem\n              divider\n              key={`${route}${route.activeIndex}`}\n              button\n              component={Link}\n              to={route.link}\n              selected={props.value === route.activeIndex}\n              classes={{ selected: classes.drawerItemSelected }}\n              onClick={() => {\n                setOpenDrawer(false);\n                setValue(route.activeIndex);\n              }}\n            >\n              <ListItemText>\n                <Typography variant='subtitle1' style={value === route.activeIndex ? { color: theme.palette.common.orange } : { color: 'white' }} >\n                  {route.name}\n                </Typography>\n              </ListItemText>\n            </ListItem>\n          ))}\n        </List>\n      </SwipeableDrawer>\n      <IconButton\n        className={classes.drawerIconContainer}\n        onClick={() => setOpenDrawer(!openDrawer)}\n        disableRipple\n      >\n        <MenuIcon style={{ width: '50px', height: '50px' }} />\n      </IconButton>\n    </React.Fragment >\n\n  )\n\n\n  const tabs = (\n    <Tabs value={value} onChange={handleChange} className={classes.tabContainer}>\n      <Tab label=\"Home\" value='1' component={Link} to='/' disableRipple classes={{ root: classes.tab }} />\n      <Tab label=\"About\" value='2' component={Link} to='/about' disableRipple classes={{ root: classes.tab }} />\n      <Tab label=\"Skills\" value='3' component={Link} to='/skills' disableRipple classes={{ root: classes.tab }} />\n      <Tab label=\"Projects\" value='4' component={Link} to='/projects' disableRipple classes={{ root: classes.tab }} />\n      <Tab label=\"Contact\" value='5' component={Link} to='/contact' disableRipple classes={{ root: classes.tab }} />\n    </Tabs>\n  )\n\n  return (\n    <>\n      <ElevationScroll {...props}>\n\n        <AppBar position=\"fixed\" className={classes.appbar}>\n          <Toolbar disableGutters>\n\n            <Button disableRipple className={classes.logoContainer} component={Link} to='/' onClick={(e) => setValue('1')}>\n              <img src={Logo} alt={'Logo'} />\n            </Button>\n\n            {matches ? drawer : tabs}\n\n          </Toolbar>\n        </AppBar>\n      </ElevationScroll>\n\n      <div className={classes.toolbarMargin} />\n\n      {props.children}\n\n    </>\n  );\n}\n\nexport default Navbar","C:\\Users\\sinmo\\Homework_Assignments\\08_Portfolio\\tsinmoua.github.io\\src\\components\\Footer.js",[],"C:\\Users\\sinmo\\Homework_Assignments\\08_Portfolio\\tsinmoua.github.io\\src\\components\\ScrollToTop.js",[],"C:\\Users\\sinmo\\Homework_Assignments\\08_Portfolio\\tsinmoua.github.io\\src\\pages\\Home.js",["57"],"import React, { useState } from \"react\"\nimport { Button, Grid, makeStyles, Typography, } from \"@material-ui/core\";\nimport { Link } from 'react-router-dom'\nimport Flash from 'react-reveal/Flash';\nimport Typewriter from 'typewriter-effect';\n\nimport about from '../assets/About.png'\nimport tools from '../assets/Tools.png'\nimport projects from '../assets/Projects.png'\nimport contact from '../assets/contact.png'\n\nconst useStyles = makeStyles((theme) => ({\n\n  helloContainer: {\n    backgroundImage: 'linear-gradient(#004080, black)',\n    height: '90vh',\n  },\n  hello: {\n    fontSize: '250%',\n    // [theme.breakpoints.down(\"md\")]: {\n    //   fontSize: '300%'\n    // },\n    // [theme.breakpoints.down(\"sm\")]: {\n    //   fontSize: '14rem'\n    // },\n    // [theme.breakpoints.down(\"xs\")]: {\n    //   fontSize: '6rem'\n    // },\n  },\n  helloText: {\n    fontSize: '10rem',\n    fontWeight: 'bolder',\n    color: theme.palette.secondary.main,\n    [theme.breakpoints.down(\"md\")]: {\n      fontSize: '8rem'\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: '5rem'\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: '4rem'\n    },\n    [theme.breakpoints.down(\"500\")]: {\n      fontSize: '3rem'\n    },\n    [theme.breakpoints.down(\"375\")]: {\n      fontSize: '2.5rem'\n    },\n  },\n  info: {\n    color: theme.palette.primary.main,\n  },\n  images: {\n    height: '20rem',\n    margin: '5rem',\n    [theme.breakpoints.down(\"md\")]: {\n      height: '10rem',\n      margin: '1rem',\n    },\n    // [theme.breakpoints.down(\"700\")]: {\n    //   height: '13rem',\n    //   margin: '3rem',\n    // },\n    [theme.breakpoints.down(\"500\")]: {\n      height: '15rem',\n      margin: '.5rem',\n      display: 'block'\n    }\n  },\n  infoText: {\n    fontSize: '2.5rem',\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: '2rem'\n    },\n    [theme.breakpoints.down(\"500\")]: {\n      padding: '0 2rem 0 2rem',\n      fontSize: '1.5rem',\n      textAlign: 'center'\n    },\n  },\n  sections: {\n    height: '50vh',\n    [theme.breakpoints.down(\"520\")]: {\n      height: '70vh',\n    },\n  },\n  line: {\n    height: '1px',\n    width: '80vw',\n    backgroundColor: '#004080'\n  }\n}))\n\n\n\n\nconst Home = () => {\n  const classes = useStyles();\n  const [counter, setCounter] = useState(0)\n\n  setTimeout(() => { setCounter(counter + 1) }, 4000)\n\n  return (\n    <Grid container>\n\n      <Grid container justify='center' alignItems='center' className={classes.helloContainer} >\n        <Flash spy={counter}>\n        <Typography variant='h1' className={classes.helloText}>\n          <span className={classes.hello}>Hello,</span><br />\n            My name is Tsin.\n        </Typography>\n        </Flash>\n\n      </Grid>\n\n      <Grid container className={classes.info}>\n\n        <Grid container\n          justify='center'\n          alignItems='center'\n          className={classes.sections}\n        >\n          <Grid item>\n            <Typography variant='h4' className={classes.infoText}>\n              <span style={{ fontWeight: \"bold\" }}>I am a...</span><br /><br />\n              Software Engineer. <br />Husband.<br />\n              Father.<br /> Fitness Enthusiast.<br />\n              <Button variant=\"contained\" color=\"primary\"\n                component={Link} to=\"/about\" style={{ color: '#FFC04A' }}>\n                Learn more\n              </Button>\n            </Typography>\n          </Grid>\n          <Grid item>\n            <img src={about} alt='profile'\n              className={classes.images}\n              style={{ borderRadius: '50%' }}\n            />\n          </Grid>\n        </Grid>\n\n        <hr className={classes.line} />\n\n        <Grid container\n          justify='center'\n          alignItems='center'\n          className={classes.sections}\n        >\n          <Grid item>\n            <img src={tools} alt='tools'\n              className={classes.images}\n            />\n          </Grid>\n          <Grid item>\n            <Typography variant='h4' className={classes.infoText}>\n              <span style={{ fontWeight: \"bold\" }}>Toolpack</span>\n              <br /><br />\n              HTML, CSS, JavaScript<br />\n              MySQL, MongoDB<br />\n              and so much more!<br />\n              <Button variant=\"contained\" color=\"primary\"\n                component={Link} to=\"/skills\" style={{ color: '#FFC04A' }}>\n                Learn more\n              </Button>\n            </Typography>\n          </Grid>\n        </Grid>\n\n        <hr className={classes.line} />\n\n        <Grid container\n          justify='center'\n          alignItems='center'\n          className={classes.sections}\n        >\n          <Grid item>\n            <Typography variant='h4' className={classes.infoText}>\n              <span style={{ fontWeight: \"bold\" }}>My work</span>\n              <br /><br />\n              Works from collaboration.<br />\n              Works from myself.<br />\n              <Button variant=\"contained\" color=\"primary\"\n                component={Link} to=\"/projects\" style={{ color: '#FFC04A' }}>\n                Learn more\n              </Button>\n            </Typography>\n          </Grid>\n          <Grid item>\n            <img src={projects} alt='Projects'\n              className={classes.images}\n            />\n          </Grid>\n        </Grid>\n\n        <hr className={classes.line} />\n\n        <Grid container\n          justify='center'\n          alignItems='center'\n          className={classes.sections}\n        >\n          <Grid item>\n            <img src={contact} alt='Contact'\n              className={classes.images}\n            />\n          </Grid>\n          <Grid item>\n            <Typography variant='h4' className={classes.infoText}>\n              <span style={{ fontWeight: \"bold\" }}>Get in touch</span>\n              <br /><br />\n              Email me.<br />\n              Connect with me.<br />\n              <Button variant=\"contained\" color=\"primary\"\n                component={Link} to=\"/contact\" style={{ color: '#FFC04A' }}>\n                Learn more\n              </Button>\n            </Typography>\n          </Grid>\n        </Grid>\n\n      </Grid>\n    </Grid>\n  )\n};\n\nexport default Home;\n","C:\\Users\\sinmo\\Homework_Assignments\\08_Portfolio\\tsinmoua.github.io\\src\\pages\\About.js",[],"C:\\Users\\sinmo\\Homework_Assignments\\08_Portfolio\\tsinmoua.github.io\\src\\pages\\Skills.js",[],"C:\\Users\\sinmo\\Homework_Assignments\\08_Portfolio\\tsinmoua.github.io\\src\\pages\\Projects.js",[],"C:\\Users\\sinmo\\Homework_Assignments\\08_Portfolio\\tsinmoua.github.io\\src\\pages\\Contact.js",[],["58","59"],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":105,"column":6,"nodeType":"66","endLine":105,"endColumn":39,"suggestions":"67"},{"ruleId":"68","severity":1,"message":"69","line":5,"column":8,"nodeType":"70","messageId":"71","endLine":5,"endColumn":18},{"ruleId":"60","replacedBy":"72"},{"ruleId":"62","replacedBy":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'window.location.pathname'. Either exclude it or remove the dependency array. Outer scope values like 'window.location.pathname' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["76"],"no-unused-vars","'Typewriter' is defined but never used.","Identifier","unusedVar",["74"],["75"],"no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},"Update the dependencies array to be: [value]",{"range":"79","text":"80"},[2543,2576],"[value]"]